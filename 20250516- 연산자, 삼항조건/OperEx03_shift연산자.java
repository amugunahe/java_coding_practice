package com.operex; // 이 코드가 속한 폴더(패키지)를 나타내요. (패키지는 관련된 클래스들을 모아두는 일종의 폴더입니다.)

/*shift 연산자* (left, right) // 비트(bit) 단위로 값을 왼쪽 또는 오른쪽으로 이동시키는 연산자입니다.
값을 2진수로 바꾼후 왼쪽인지, 오른쪽인지 비트수를 이동함 // 숫자를 컴퓨터가 이해하는 2진수 형태로 보고 비트를 움직이는 거예요.
>>: 오른쪽, <<: 왼쪽 // 각 연산자가 어느 방향으로 비트를 이동시키는지 나타냅니다.
이동한 빈자리는 0으로 채운다   // 이동 후 생기는 빈 공간을 어떻게 채우는지 설명합니다. (단, '>>'는 부호 비트 유지에 따라 다름)
*/ // 이 코드에 대한 기본적인 설명이 여기에 적혀있어요.

public class OperEx03 { // 'OperEx03'이라는 이름의 프로그램을 시작하는 클래스입니다. (모든 자바 코드는 클래스 안에 작성돼요.)

	public static void main(String[] args) { // 프로그램이 실제로 시작되는 부분이에요. 자바 프로그램은 항상 이 'main' 메서드부터 실행됩니다.

		int i = 10; // 'i'라는 이름의 'int' (정수) 타입 변수를 만들고 '10'이라는 값을 넣어줬어요.

		// 숫자 10의 2진수 표현 (int는 32비트지만, 여기서는 이해를 위해 일부만 보여줄게요)
		// 10진수 10 = 0000 1010 (2진수)
		
		int j = i >> 2; // 이 줄이 시프트 연산의 핵심입니다!
		// 'i'의 값(10)을 오른쪽으로 2비트 이동시키는 연산입니다.
		// 1. 10의 2진수: 0000 1010
		// 2. 오른쪽으로 2칸 이동 (>> 2):
		//    - 첫 번째 이동: 0000 0101 (맨 오른쪽 0이 사라짐, 왼쪽 0이 채워짐)
		//    - 두 번째 이동: 0000 0010 (맨 오른쪽 1이 사라짐, 왼쪽 0이 채워짐)
		// 3. 최종 2진수 0000 0010은 10진수로 2입니다.
		// 즉, 10을 2번 나누기(2의 제곱인 4로 나누기)와 같은 효과를 얻습니다. (10 / 4 = 2, 나머지 2)
		// 이 결과값 2가 변수 'j'에 저장됩니다.
		
		System.out.println("i: " + i); // 'i' 변수에 저장된 값을 화면에 출력해요. (i는 10으로 변하지 않음)
		System.out.println("y: " + j); // 'j' 변수에 저장된 값을 화면에 출력해요. (j는 2가 됨)
	}
}
