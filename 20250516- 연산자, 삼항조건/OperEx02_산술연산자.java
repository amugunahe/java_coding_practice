package com.operex; // 이 코드가 속한 폴더(패키지)를 나타내요. (패키지는 관련된 클래스들을 모아두는 일종의 폴더입니다.)

/* 산술 연산자 = > +, -, *, /, % // 덧셈, 뺄셈, 곱셈, 나눗셈, 나머지 연산자들을 의미합니다.
byte, short, char, int 사이의 연산 결과는 int형 // 4바이트 미만 정수형끼리 연산하면 결과는 무조건 int가 된다는 규칙입니다.
   
long, float, double 사이의 연산 결과는 큰 자료형으로 결정됨 // 이들 타입끼리 연산하면 가장 큰 타입으로 결과가 나온다는 규칙입니다.
*/ // 이 코드에 대한 기본적인 설명이 여기에 적혀있어요.

public class OperEx02 { // 'OperEx02'라는 이름의 프로그램을 시작하는 클래스입니다.

	public static void main(String[] args) { // 프로그램이 실제로 시작되는 부분이에요. 자바 프로그램은 항상 이 'main' 메서드부터 실행됩니다.
		
	short a, b; // 'a'와 'b'라는 이름의 'short' (2바이트 정수) 타입 변수를 선언했어요.
		
	a = 10; // 변수 'a'에 10이라는 값을 저장했어요.
	b = 10; // 변수 'b'에 10이라는 값을 저장했어요.
	// a = b = 10; // 이 주석은 'a = 10;'과 'b = 10;'을 한 줄로 'a = b = 10;' 처럼 쓸 수도 있다는 것을 보여줍니다.
	                 // 다만, 보통 가독성을 위해 각 변수에 따로 할당하는 경우가 더 많아요.
	
	// int c = a + b; // 이 줄이 자동 형 변환 규칙을 보여주는 핵심입니다.
	// 'a'와 'b'는 모두 'short' 타입입니다.
	// 자바의 규칙에 따라 'short' 타입끼리 덧셈 연산('+')을 하면, 그 결과는 'int' 타입으로 자동 변환됩니다.
	// 즉, 'a + b'의 결과는 'short'가 아니라 'int'인 20이 됩니다.
	// 따라서 이 결과를 저장할 변수 'c'도 'int' 타입으로 선언해야 해요.
	int c = a + b; // 'c'라는 이름의 'int' 타입 변수를 선언하고, 'a'와 'b'를 더한 값 (int 타입)을 'c'에 저장했어요.
	// 같은 자료형이 더해지면 결과는 int (short랑 short랑 더했다고 short가 되는게 아님) // 이 주석이 바로 위에서 설명한 자동 형 변환 규칙을 강조하고 있습니다.
	
	System.out.println("c의 값은: " + c); // 'c' 변수에 저장된 값을 화면에 출력해요. "c의 값은: " 이라는 글자와 'c'의 값이 함께 나옵니다.
	}
}
