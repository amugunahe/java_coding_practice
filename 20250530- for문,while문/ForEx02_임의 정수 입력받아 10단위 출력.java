package com.exam; // 이 코드가 속한 패키지(폴더) 이름이다.

/*
  ForEx02 클래스: **사용자 입력 범위 안에서 전체 합계, 짝수 합계, 홀수 합계를 존나게 계산하는 프로그램이다!**
 
  핵심:
  - **문제:** 사용자로부터 양의 정수를 입력받는다. 1부터 입력받은 수까지
  전체 합계, 짝수의 합계, 홀수의 합계를 계산한다.
  - **출력 규칙:**
  - 10단위로 끊어서 각 합계를 출력한다! (예: 1~10, 1~20, 1~30...)
  - 마지막에는 입력받은 숫자까지의 최종 합계를 출력한다!
  - **`Scanner` 클래스:** 사용자한테 키보드로 정수를 입력받을 때 쓰는 존나 유용한 놈이다!
  - **`n` (입력받을 숫자):** 최종적으로 계산할 범위의 끝 숫자다.
  - **`sum`, `even`, `odd`:** 각각 전체 합계, 짝수 합계, 홀수 합계를 저장할 변수다. (모두 0으로 초기화!)
  - **`for` 루프:** 1부터 `n`까지 숫자를 존나게 돌면서 합계를 계산한다!
  - **`i % 2 == 0`:** 짝수/홀수 판별할 때 쓰는 존나 간단한 조건식이다!
  - **`i % 10 == 0`:** 10단위 끊어서 출력할 때 쓰는 존나 핵심적인 조건식이다!
  - **`i == n`:** 마지막 숫자까지 계산했을 때 최종 결과 출력할 때 쓴다!
 */

import java.util.*; // 사용자로부터 키보드 입력을 받기 위해 'Scanner' 클래스가 포함된 java.util 패키지 전체를 불러온다.

public class ForEx02 {

	public static void main(String[] args) {
		
		// ★★★ 변수 선언 및 초기화! ★★★
		// `n`: 사용자로부터 입력받을 정수.
		// `sum`: 1부터 현재 숫자까지의 전체 합계.
		// `even`: 1부터 현재 숫자까지의 짝수 합계.
		// `odd`: 1부터 현재 숫자까지의 홀수 합계.
		// 모두 0으로 초기화한다. (존나 중요!)
		int n;
		int sum;
		int even;
		int odd;
		sum = even = odd = 0; // 이 한 줄로 네 변수를 동시에 0으로 초기화!

		// ★★★ 사용자 입력을 받을 'Scanner' 객체 생성! ★★★
		Scanner sc = new Scanner(System.in);

		// --- 사용자에게 정수 입력 요청! ---
		System.out.print("정수 입력: ");
		n = sc.nextInt(); // 사용자가 입력한 정수를 'n' 변수에 저장한다.

		// ★★★ 메인 루프: 1부터 `n`까지 숫자를 존나게 돌면서 합계 계산 및 출력! ★★★
		// `i`는 1부터 `n`까지 1씩 증가하면서 반복한다.
		for (int i = 1; i <= n; i++) {
			sum += i; // 1부터 `i`까지의 전체 합계에 현재 `i` 값을 더한다.
			
			if (i % 2 == 0) { // ★★★ 존나 중요! `i`가 짝수면 짝수 합계에 더한다! ★★★
				even += i; 
			} else { // `i`가 홀수면 홀수 합계에 더한다!
				odd += i; 
			}
			
			// ★★★ 10단위 출력 조건 확인! (존나 중요!) ★★★
			// 현재 `i`가 10의 배수일 때 (예: 10, 20, 30...) 지금까지의 합계를 출력한다.
			if (i % 10 == 0) { // 10단위 출력
				System.out.println("1~" + i + "까지의 전체의 합계: " + sum);
				System.out.println("1~" + i + "까지의 짝수의 합계: " + even);
				System.out.println("1~" + i + "까지의 홀수의 합계: " + odd);
				System.out.println(); // 깔끔하게 한 줄 띄우기!
			} 
			// ★★★ 최종 합계 출력 조건 확인! (존나 중요!) ★★★
			// 현재 `i`가 사용자가 입력한 최종 숫자 `n`과 같을 때 (즉, 루프의 마지막에 도달했을 때)
			// 지금까지의 최종 합계를 출력한다!
			else if (i == n) { // 마지막 숫자 `n`일 때
				System.out.println("1~" + i + "까지의 전체의 합계: " + sum);
				System.out.println("1~" + i + "까지의 짝수의 합계: " + even);
				System.out.println("1~" + i + "까지의 홀수의 합계: " + odd);
				System.out.println(); // 깔끔하게 한 줄 띄우기!
			}
		}
		
		// ★★★ Scanner 닫기! (존나 중요!) ★★★
		// 자원 낭비를 막기 위해 다 쓴 'Scanner'는 꼭 닫아줘야 한다!
		sc.close();
	}
}
