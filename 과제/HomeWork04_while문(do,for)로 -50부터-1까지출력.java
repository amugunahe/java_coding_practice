package com.test; // 이 코드가 속한 패키지(폴더) 이름이다.

/*
  HomeWork04 클래스: **-50부터 1까지의 정수를 존나게 출력하는 예제다!**
 
  핵심:
  - **문제:** -50부터 1까지 숫자를 출력하는데, 한 줄에 5개씩만 출력하고, 숫자들 사이는 탭 간격으로 띄운다.
  - **`while` 루프:** 시작 숫자부터 끝 숫자까지 반복해서 숫자를 출력할 때 쓴다!
  - **`System.out.printf()`:** 출력 형식을 존나게 깔끔하게 맞출 때 쓴다! (`\t`으로 탭 간격!)
  - **`i % 5 == 0` 조건:** 5개마다 줄을 바꿔주는 존나 핵심적인 로직이다! (숫자가 5의 배수가 될 때 줄 바꿈!)
 */

public class HomeWork04 { // 'HomeWork04'라는 이름의 클래스를 정의한다.

	public static void main(String[] args) { // ★★★ 프로그램의 시작점! ★★★
		// 이 `main` 메소드 안의 코드가 프로그램이 실행될 때 가장 먼저 동작한다.

		// 1. 시작 숫자 설정
		int i = -50; // 정수형 변수 'i'를 선언하고, 숫자를 -50부터 시작하기 위해 -50으로 초기화한다.

		// 2. 숫자 출력 루프 (`while` 문): 'i'가 1보다 작거나 같을 동안 존나게 반복!
		// `while (i <= 1)`: 이 루프는 'i'의 값이 1보다 작거나 같을 동안 계속 반복된다.
		// 즉, 'i'가 -50부터 시작하여 1이 될 때까지 숫자를 출력하고 처리한다.
		while (i <= 1) {
			// ★★★ 현재 'i'의 값을 출력한다! (탭 간격 맞추는 `printf` 사용!) ★★★
			// `printf("\t%d\t", i)`:
			// - `\t`: 숫자 앞뒤에 탭 간격을 둔다. 이는 출력 결과에서 숫자들 간의 간격을 일정하게 유지하는 데 존나게 도움을 준다.
			// - `%d`: 정수형 변수 `i`의 값을 이 위치에 출력하라는 형식 지정자다.
			System.out.printf("\t%d\t", i);

			// 3. 다음 숫자로 이동
			i++; // 'i'의 값을 1 증가시킨다. 다음 반복에서는 1 증가된 숫자가 처리된다.

			// 4. 5개마다 줄바꿈 조건 확인 (★ 핵심 로직! ★)
			// 'i'의 값이 (현재 출력된 숫자의 다음 값)이 5의 배수인지 확인한다.
			// (예를 들어, -46을 출력한 후 `i`는 -45가 되는데, -45는 5의 배수이므로 줄바꿈이 일어난다.)
			// 이렇게 하면 항상 5개의 숫자가 한 줄에 존나게 깔끔하게 출력된다!
			// 단, 마지막 줄은 숫자가 5개가 안 될 수도 있으므로, 이 조건은 유연하게 작동한다.
			if (i % 5 == 0) {
				System.out.println(); // 현재 줄을 끝내고 새로운 줄로 이동한다.
			}
		}
		// (루프가 끝나면 'i'가 1보다 커지므로 프로그램이 자연스럽게 종료된다.)
	} // main 메소드 종료

    /*
      (아래 주석 처리된 부분은 다른 형태의 루프 예시이다.
      니가 작성했던 코드의 주석을 그대로 살려두면서 설명만 제거했다, 씨발!)
     
      do~while 문
      do { System.out.printf("\t%d\t", i); i++;
      if (i % 5 == 0) System.out.println(); }while(i<=1);
     
      for문
      for(;i<=1;){ if (i % 5 == 0) System.out.println(); }
     */

} // HomeWork04 클래스 종료
