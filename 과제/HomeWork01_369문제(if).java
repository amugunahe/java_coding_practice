package com.test; // 이 코드가 속한 패키지 이름입니다. 보통 관련된 클래스들을 묶어두는 폴더 같은 개념이에요.

/*
  [문제 1]
  - 목표: 1부터 99까지의 정수를 입력받아, 숫자에 3, 6, 9가 포함되어 있는지 확인하고 박수를 출력합니다.
  - 조건:
  - 3, 6, 9 중 하나가 있으면 "박수짝"을 출력합니다.
  - 3, 6, 9 중 두 개가 있으면 "박수짝짝"을 출력합니다.
 
  [예시 결과]
  1 ~ 99 사이의 정수 입력 : 36
  박수짝짝
*/

import java.util.Scanner; // 사용자로부터 키보드 입력을 받기 위해 'Scanner'라는 클래스를 불러옵니다.

public class HomeWork01 { // 'HomeWork01'이라는 이름의 클래스를 정의합니다.

	public static void main(String[] args) { // ★★★ 프로그램의 시작점 ★★★
		// 이 `main` 메서드 안의 코드가 프로그램이 실행될 때 가장 먼저 동작합니다.
		// `public static void`는 외부에서 접근 가능하고(public), 객체를 생성하지 않고도 바로 실행할 수 있으며(static),
		// 어떤 결과 값도 반환하지 않는다는(void) 의미입니다.

		Scanner sc = new Scanner(System.in); // 1. 사용자 입력을 받기 위한 'Scanner' 객체를 만듭니다.
											// `System.in`은 표준 입력 장치(키보드)를 의미합니다.

		int num = 0; // 2. 사용자에게서 입력받을 정수를 저장할 'num'이라는 변수를 선언하고 0으로 초기화합니다.
		int clapCount = 0; // 3. 숫자에 3, 6, 9가 몇 개 포함되어 있는지 세는 'clapCount' 변수를 선언하고 0으로 초기화합니다.
						// 이 변수의 값에 따라 "짝" 또는 "짝짝"이 결정됩니다.

		System.out.print("1~99 사이의 정수 입력: "); // 4. 사용자에게 "1~99 사이의 정수 입력: "라는 메시지를 화면에 출력합니다.
												// `print`는 줄바꿈 없이 출력합니다.
		num = sc.nextInt(); // 5. 사용자가 키보드로 입력한 정수(숫자)를 읽어서 'num' 변수에 저장합니다.

		// --- 입력 값 유효성 검사 (정해진 범위 내의 숫자인지 확인) ---
		// 입력된 숫자가 1부터 99 사이의 유효한 범위에 있는지 확인합니다.
		if (num < 1 || num > 99) { // 만약 'num'이 1보다 작거나(num < 1) 또는( || ) 'num'이 99보다 크다면(num > 99)
			System.out.println("숫자의 범위를 벗어났습니다. 1~99 사이의 정수를 다시 입력하세요."); // 오류 메시지를 출력합니다.
			sc.close(); // 프로그램을 더 이상 실행할 필요가 없으므로, Scanner 객체를 닫아 자원(메모리) 누수를 방지합니다.
			return; // 현재 `main` 메서드의 실행을 여기서 즉시 종료합니다.
		}

		// --- 숫자의 각 자리를 분리하고 3, 6, 9 포함 여부 확인 ---
		// 예를 들어, num이 36일 경우, tensDigit은 3, unitsDigit은 6이 됩니다.
		int tensDigit = num / 10; // 'num'을 10으로 나눈 '몫'은 십의 자리 숫자입니다. (예: 36 / 10 = 3)
		int unitsDigit = num % 10; // 'num'을 10으로 나눈 '나머지'는 일의 자리 숫자입니다. (예: 36 % 10 = 6)

		// 십의 자리에 3, 6, 9가 있는지 확인합니다.
		// 'tensDigit != 0' 조건은 1~9 같은 한 자리 숫자의 경우 십의 자리가 0이므로, 불필요한 검사를 피하기 위함입니다.
		if (tensDigit != 0 && (tensDigit == 3 || tensDigit == 6 || tensDigit == 9)) {
			clapCount++; // 십의 자리가 0이 아니면서, 3, 6, 9 중 하나라면 'clapCount'를 1 증가시킵니다.
		}

		// 일의 자리에 3, 6, 9가 있는지 확인합니다.
		// 'unitsDigit != 0' 조건은 10, 20, 30 같은 십의 자리만 있는 숫자의 경우 일의 자리가 0이므로,
		// 0이 3,6,9에 해당하지 않게 하기 위함입니다. (예: 30은 일의 자리가 0이므로 박수 없음)
		if (unitsDigit != 0 && (unitsDigit == 3 || unitsDigit == 6 || unitsDigit == 9)) {
			clapCount++; // 일의 자리가 0이 아니면서, 3, 6, 9 중 하나라면 'clapCount'를 1 증가시킵니다.
		}

		// --- '짝' 개수에 따른 최종 결과 출력 ---
		if (clapCount == 2) { // 'clapCount'가 2라면 (십의 자리와 일의 자리 모두 3, 6, 9가 있는 경우)
			System.out.println("박수 짝짝"); // "박수 짝짝"을 출력합니다.
		} else if (clapCount == 1) { // 'clapCount'가 1이라면 (십의 자리 또는 일의 자리 중 하나만 3, 6, 9가 있는 경우)
			System.out.println("박수 짝"); // "박수 짝"을 출력합니다.
		} else { // 'clapCount'가 0이라면 (3, 6, 9가 전혀 없는 경우)
			System.out.println("박수 없음"); // "박수 없음"을 출력합니다.
		}

		sc.close(); // 모든 작업이 끝났으므로, Scanner 객체를 닫아 자원 누수를 방지합니다.
	}
}
