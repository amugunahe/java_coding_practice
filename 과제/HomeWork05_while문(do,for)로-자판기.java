package com.test; // 이 코드가 속한 패키지 이름입니다.

/*
  [문제 2]
  콜라, 사이다, 마운틴, 초코송이, 에이스, 웨하스 메뉴를 선택하여 선택한 메뉴가 출력되는 자판기 프로그램을 작성합니다.
  단, 0번을 누르면 프로그램이 종료됩니다.
 */

import java.util.*; // 사용자로부터 키보드 입력을 받기 위해 'Scanner' 클래스가 포함된 java.util 패키지 전체를 불러옵니다.

public class HomeWork05 { // 'HomeWork05'라는 이름의 클래스를 정의합니다.

	public static void main(String[] args) { // ★★★ 프로그램의 시작점 ★★★
		// 이 `main` 메서드 안의 코드가 프로그램이 실행될 때 가장 먼저 동작합니다.

		// 1. 사용자 입력을 받기 위한 Scanner 객체 생성
		Scanner sc = new Scanner(System.in); // `System.in`은 표준 입력 장치(키보드)를 의미합니다.

		// 2. 사용자 메뉴 선택을 저장할 변수 초기화
		int m = 0; // 사용자에게서 입력받을 메뉴 번호를 저장할 'm' 변수를 선언하고 0으로 초기화합니다.

		// 3. 자판기 프로그램 핵심 루프 (while문)
		// `while (true)`: 이 루프는 조건이 항상 참(true)이므로, 무한히 반복됩니다.
		// 사용자가 '0'을 입력하여 `break` 문을 만나기 전까지 계속 실행됩니다.
		while (true) {
			// 사용자에게 메뉴 선택지를 출력합니다.
			System.out.print("메뉴 선택하세요=> 콜라-1, 사이다-2, 마운틴-3, 초코송이-4, 에이스-5, 웨하스-6(0 종료):");
			m = sc.nextInt(); // 사용자가 키보드로 입력한 정수(숫자)를 읽어서 'm' 변수에 저장합니다.

			// 4. 프로그램 종료 조건 확인
			// 사용자가 '0'을 입력했는지 확인합니다.
			if (m == 0) {
				System.out.println("프로그램을 종료합니다."); // 종료 메시지를 출력합니다.
				break; // `break` 문은 현재 `while` 루프를 즉시 종료하고 루프 다음 코드로 넘어갑니다.
                        // 이 경우, `main` 메서드의 끝으로 가서 프로그램이 종료됩니다.
			}

			// 5. 선택된 메뉴에 따라 다른 동작 수행 (switch문)
			// `switch` 문은 'm' 변수의 값에 따라 여러 경우 중 하나를 선택하여 실행할 때 사용합니다.
			switch (m) {
			case (1): // 'm'이 1과 같다면 이 코드를 실행합니다.
				System.out.println("콜라"); // "콜라"를 출력합니다.
				break; // 해당 case 실행 후 `switch` 문을 종료합니다. `break`가 없으면 다음 `case` 문도 이어서 실행될 수 있습니다.

			case (2): // 'm'이 2와 같다면 이 코드를 실행합니다.
				System.out.println("사이다");
				break;

			case (3): // 'm'이 3과 같다면 이 코드를 실행합니다.
				System.out.println("마운틴");
				break;

			case (4): // 'm'이 4와 같다면 이 코드를 실행합니다.
				System.out.println("초코송이");
				break;

			case (5): // 'm'이 5와 같다면 이 코드를 실행합니다.
				System.out.println("에이스");
				break;

			case (6): // 'm'이 6과 같다면 이 코드를 실행합니다.
				System.out.println("웨하스");
				break;

			default: // 위의 어떤 `case`에도 해당하지 않을 경우 (즉, 1~6, 0 외의 다른 숫자를 입력했을 때)
				System.out.println("선택하신 상품이 없습니다."); // "선택하신 상품이 없습니다." 메시지를 출력합니다.
				// 여기서는 `break;`가 생략되어 있지만, `default`가 `switch` 문의 마지막이므로 없어도 무방합니다.
			}
		} // `while` 루프 끝

		// 6. 자원 해제
		// 프로그램이 종료될 때, 더 이상 `Scanner` 객체를 사용하지 않으므로,
		// 열려있던 자원(메모리 등)을 시스템에 반환합니다. 이는 좋은 프로그래밍 습관입니다.
		sc.close();
	}
}
