package com.arraytwo; // 이 코드 덩어리가 속한 폴더(패키지) 이름이다.

/*
  ArrayEx08 클래스: **'가변 배열(Ragged Array)'을 존나게 직접 선언하고, 각 행의 길이를 다르게 초기화한 다음, 값을 채워 넣고 출력하는 예제다!**
 
  핵심:
  - **레기드 배열 = 가변 배열 = 비정형 배열:**
  - 2차원 배열인데, 각 행(row)마다 열(column)의 길이가 존나게 다른 배열을 말한다!
  - `int[][] arr = new int[3][];`처럼 먼저 행의 개수만 정하고,
  - 각 행의 열 길이는 `arr[0] = new int[2];` 이런 식으로 나중에 따로따로 정할 수 있다! (존나 유동적!)
  - **이 예제의 목표:**
  - 3행짜리 가변 배열을 만들고, 각 행의 열 길이를 (2, 1, 3)으로 다르게 지정한다.
  - 각 칸에 직접 값을 할당한다.
  - 중첩 `for` 문으로 배열의 모든 요소들을 출력한다!
 */

public class ArrayEx08 { // 'ArrayEx08'이라는 이름의 공개(public) 클래스를 선언한다.

	public static void main(String[] args) { // ★★★ 여.기.서.부.터. 프로그램 시작점이다! 무조건 여기부터 봄. ★★★
		// 'main' 메소드 안에 있는 코드들이 순서대로 실행될 거다, 씨발!
		
		// ★★★ 1. 가변 배열(Ragged Array) 선언! (행의 개수만 지정한다!) ★★★
		// 3개의 행을 가진 2차원 배열을 선언한다.
		// 각 행의 열 길이는 아직 정해지지 않았다! (`[]` 부분이 비어있지?)
		int[][] arr = new int[3][];

		// ★★★ 2. 각 행의 열 길이 존나게 다르게 초기화! ★★★
		// 각 행(0, 1, 2)마다 새로운 1차원 배열을 할당해서 열의 길이를 다르게 지정한다.
		arr[0] = new int[2]; // 첫 번째 행(`arr[0]`)은 길이 2짜리 배열로 만든다!
		arr[1] = new int[1]; // 두 번째 행(`arr[1]`)은 길이 1짜리 배열로 만든다!
		arr[2] = new int[3]; // 세 번째 행(`arr[2]`)은 길이 3짜리 배열로 만든다!

		// ★★★ 3. 배열에 직접 값 할당! ★★★
		// 각 행의 각 칸에 숫자를 직접 때려 박는다!
		
		// --- 첫 번째 행(arr[0])에 값 할당 (길이 2) ---
		arr[0][0] = 100; // arr[0]의 0번째 칸에 100 저장
		arr[0][1] = 200; // arr[0]의 1번째 칸에 200 저장
		// System.out.println("1행 끝"); // 이 주석은 그냥 참고용이다.

		// --- 두 번째 행(arr[1])에 값 할당 (길이 1) ---
		arr[1][0] = 300; // arr[1]의 0번째 칸에 300 저장
		// System.out.println("2행 끝"); // 이 주석은 그냥 참고용이다.

		// --- 세 번째 행(arr[2])에 값 할당 (길이 3) ---
		arr[2][0] = 400; // arr[2]의 0번째 칸에 400 저장
		arr[2][1] = 500; // arr[2]의 1번째 칸에 500 저장
		arr[2][2] = 600; // arr[2]의 2번째 칸에 600 저장
		// System.out.println("3행 끝"); // 이 주석은 그냥 참고용이다.

		// ★★★ 4. 배열에 저장된 값 출력! (중첩 for문 사용!) ★★★
		// 가변 배열의 모든 요소를 순서대로 출력한다.
		
		// --- 바깥쪽 `for` 문 (i): 배열의 '행'을 순회한다! ---
		// `arr.length`는 전체 '행'의 개수(여기서는 3)를 알려준다!
		for (int i = 0; i < arr.length; i++) { // `i`는 현재 행의 인덱스 (0, 1, 2)
			
			// --- 안쪽 `for` 문 (j): 현재 행(`arr[i]`)의 '열'을 순회한다! ---
			// `arr[i].length`는 현재 'i'번째 행의 '열' 개수(길이)를 알려준다! (행마다 다를 수 있다!)
			for (int j = 0; j < arr[i].length; j++) { // `j`는 현재 열의 인덱스
				// 각 요소의 위치(`arr[i][j]`)와 값을 출력한다. 탭(`\t`)으로 간격 띄운다!
				System.out.print("arr[" + i + "][" + j + "]: " + arr[i][j] + "\t");
			}
			System.out.println(); // 한 행의 출력이 끝나면 줄 바꿈! (다음 행은 새 줄에서 시작!)
		}
	}
}
