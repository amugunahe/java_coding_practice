package com.arraytwo; // 이 코드 덩어리가 속한 폴더(패키지) 이름이다.

/*
  ArrayEx06 클래스: **'가변 배열(Ragged Array)'의 사용법을 존나게 보여주는 예제다!**
 
  핵심:
  - **레기드 배열 = 가변 배열 = 비정형 배열:**
  - 2차원 배열인데, 각 행(row)마다 열(column)의 길이가 존나게 다른 배열을 말한다!
  - `int[][] arr = new int[5][];`처럼 먼저 행의 개수만 정하고, 각 행의 열 길이는 나중에 따로따로 정할 수 있다.
  - 이렇게 하면 고정된 형태가 아니라, 필요에 따라 존나게 유동적으로 배열 크기를 조절할 수 있어서 편하다!
 
  - **이 예제의 목표:**
  - 미리 정의된 가변 배열의 모든 요소들을 출력하고,
  - 각 행(학생)의 점수 합계를 계산해서 출력한다! (각 행의 길이가 다르니 유용하다!)
 
  - **주요 로직: `★★★ 중첩 for문 ★★★`** (가변 배열 순회할 때 존나 필수다!)
  1. **바깥쪽 `for` (i):** 가변 배열의 '행'을 순서대로 돈다. (`arr.length`로 전체 행 개수를 얻는다!)
  2. **안쪽 `for` (j):** 현재 '행'의 '열'을 순서대로 돈다. (`arr[i].length`로 현재 행의 길이를 얻는다!)
  - **`sum = 0;` 초기화:** 각 행의 합계를 다시 구해야 하니까, 안쪽 `for` 문이 시작되기 전에 `sum`을 무조건 0으로 다시 만들어줘야 한다! (안 그러면 모든 점수가 다 합쳐져서 존나 이상해진다!)
 */

public class ArrayEx06 { // 'ArrayEx06'이라는 이름의 공개(public) 클래스를 선언한다.

	public static void main(String[] args) { // ★★★ 여.기.서.부.터. 프로그램 시작점이다! 무조건 여기부터 봄. ★★★
		// 'main' 메소드 안에 있는 코드들이 순서대로 실행될 거다, 씨발!
		
		// ★★★ 가변 배열(Ragged Array) 선언 및 초기화! ★★★
		// 이 배열은 5개의 행을 가지고 있지만, 각 행의 열 개수는 다 다르다! (존나 유동적!)
		// 예: arr[0]는 4개, arr[1]는 2개, arr[2]는 3개... 이런 식이다.
		int[][] arr = { 
				{ 100, 100, 100, 100}, // 첫 번째 행 (길이 4)
				{ 70, 70 },             // 두 번째 행 (길이 2)
				{ 100, 90, 90 },        // 세 번째 행 (길이 3)
				{ 100, 80, 80, 90, 100 }, // 네 번째 행 (길이 5)
				{ 100, 60, 60 }         // 다섯 번째 행 (길이 3)
		};

		int sum = 0; // ★★★ 각 행의 점수를 합산할 변수. 처음에는 0으로 초기화한다. ★★★
		
		// --- 가변 배열의 모든 요소 출력 및 각 행의 합계 계산! (중첩 for문!) ---
		// ★★★ 바깥쪽 `for` 문 (i): 배열의 '행'을 순회한다! ★★★
		// `arr.length`는 전체 '행'의 개수(여기서는 5)를 알려준다!
		for (int i = 0; i < arr.length; i++) { // `i`는 현재 행의 인덱스 (0, 1, 2, 3, 4)
			sum = 0; // ★★★ 존나 중요! 다음 행으로 넘어가기 전에 `sum`을 0으로 다시 초기화한다! ★★★
			         // 안 그러면 이전 행의 합계가 계속 쌓여서 존나 이상한 값이 나온다!
			
			// ★★★ 안쪽 `for` 문 (j): 현재 행(`arr[i]`)의 '열'을 순회한다! ★★★
			// `arr[i].length`는 현재 'i'번째 행의 '열' 개수(길이)를 알려준다! (행마다 다를 수 있다!)
			for (int j = 0; j < arr[i].length; j++) { // `j`는 현재 열의 인덱스
				System.out.print(arr[i][j] + "\t"); // 현재 칸의 점수를 출력하고 탭(`\t`)으로 간격 띄운다!
				sum += arr[i][j]; // 현재 칸의 점수를 `sum`에 존나게 더한다!
			}
			System.out.println(sum); // 현재 행의 모든 점수 출력 후, 그 행의 총합(`sum`)을 출력한다!
			System.out.println(); // 각 행의 출력이 끝난 후 다음 행 시작 전에 빈 줄 하나 더 출력해서 깔끔하게 한다!
		}
	}
}
