package com.arraytwo; // 이 코드가 속한 폴더(패키지) 이름이다.

/*
  ArrayEx01 클래스: **2차원 배열 (다차원 배열)의 모든 것을 존나게 파헤치는 예제!**
 
  핵심:
  - **2차원 배열이란?** 배열 안에 또 다른 배열이 들어있는 구조다! (표나 격자처럼 생각하면 존나 쉽다!)
  - **행(Row)과 열(Column):** 2차원 배열은 가로(행)와 세로(열)로 이루어진다.
  - **배열 선언 방식:**
  `자료형[][] 배열명;` 또는 `자료형 배열명[][];` 또는 `자료형[] 배열명[];` (셋 다 된다, 씨발!)
  - **배열 초기화/메모리 할당:**
  1. `배열명 = new 자료형[행크기][열크기];` (가장 일반적인 고정 크기 배열!)
  2. `배열명 = new 자료형[행크기][];` (★★존나 중요! '가변 배열'이다! 행만 정하고 열은 나중에 정함!)
  3. `배열명 = {{값1, 값2}, {값3, 값4}};` (선언과 동시에 값으로 초기화! 존나 깔끔하다!)
  - **반복문 활용:** 2차원 배열은 `for` 문을 두 개 겹쳐서 돌려야 한다! (바깥 `for`는 행, 안쪽 `for`는 열!)
 */

public class ArrayEx01 {

	public static void main(String[] args) {
		
		// ★★★ 2차원 배열 선언과 동시에 메모리 할당! (고정 크기 배열) ★★★
		// `int[2][3]`은 2행 3열짜리 int형 배열을 만들겠다는 뜻이다.
		// 총 2 * 3 = 6개의 int 값을 저장할 수 있다!
		int[][] test = new int[2][3];

		// --- 2차원 배열에 값 저장! ---
		// `test[행인덱스][열인덱스]` 형태로 접근한다. (둘 다 0부터 시작한다, 씨발!)
		// 0행에 값 저장:
		test[0][0] = 100; // 0행 0열
		test[0][1] = 200; // 0행 1열
		test[0][2] = 300; // 0행 2열

		// 1행에 값 저장:
		test[1][0] = 400; // 1행 0열
		test[1][1] = 500; // 1행 1열
		test[1][2] = 600; // 1행 2열

		// --- 2차원 배열에 저장된 값 출력! (이중 for 문 사용!) ---
		// 바깥 `for` 문: 행(row)을 순회한다.
		// `test.length`는 2차원 배열의 '행' 개수다! (여기서는 2)
		for (int i = 0; i < test.length; i++) { // `i`는 행 인덱스 (i < 2)
			// 안쪽 `for` 문: 각 행의 열(column)을 순회한다.
			// `test[i].length`는 `i`번째 행의 '열' 개수다! (여기서는 3)
			for (int j = 0; j < test[i].length; j++) { // `j`는 열 인덱스 (j < 3)
				// 각 요소의 위치와 값을 출력한다. 탭(`\t`)으로 간격 띄운다!
				System.out.print("test[" + i + "][" + j + "]:" + test[i][j] + "\t\t");
			}
			System.out.println(); // 한 행의 출력이 끝나면 줄 바꿈! (다음 행은 새 줄에서 시작!)
		}
	}
}
