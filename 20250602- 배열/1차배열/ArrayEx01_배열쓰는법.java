package com.arrayex; // 이 코드가 속한 폴더(패키지) 이름이다.

/* ArrayEx01 클래스: **자바 배열의 모든 것을 존나게 파헤치는 예제!**
 
  핵심:
  - **배열이란?** 크기와 성격(자료형)이 같은 원소들을 묶어서 쓰는 자료 구조. (한 방에 여러 개 처리!)
  - **배열 사용 순서:** 선언 -> 메모리 할당(초기화 포함) -> 요소 사용.
  - **배열 선언 및 할당 방법:**
  1. `자료형[] 배열명;` -> `배열명 = new 자료형[크기];` (따로 선언/할당)
  2. `자료형[] 배열명 = {값1, 값2, ...};` (선언과 동시에 초기화!)
  - **인덱스:** 배열의 각 칸을 가리키는 번호. **0부터 시작한다! (존나 중요!)**
  - **`arr.length`:** 배열의 전체 길이를 알려주는 존나 유용한 놈!

  	arr = new int[10];

	// 배열 요소 사용(접근)
	arr[0] = 1;
	arr[1] = 2;
	arr[2] = 3;
 */

public class ArrayEx01 {

	public static void main(String[] args) {


		// ★★★ 배열 선언과 동시에 초기화! (이렇게 하면 존나 깔끔하다!) ★★★
		// 이 한 줄로 'arr'이라는 int형 배열을 만들고, 동시에 1부터 10까지 값으로 꽉 채운다.
		int[] arr = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };


		// ★★★ 배열의 길이 확인 (존나 중요!) ★★★
		// 'arr.length'는 배열의 전체 길이를 알려준다! (여기선 10이 나온다!)
		System.out.println(arr.length);

		// ★★★ for 문을 이용해서 배열의 모든 요소를 출력한다! (실제로 실행되는 부분!) ★★★
		// 'arr.length'를 사용하면 배열 크기가 바뀌어도 코드 수정할 필요 없이 존나게 유용하다!
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " "); // 각 칸의 값을 출력하고 공백으로 구분한다.
		}
		System.out.println(); // 마지막에 줄 바꿈 (깔끔하게 보이기 위함)
	}
}
