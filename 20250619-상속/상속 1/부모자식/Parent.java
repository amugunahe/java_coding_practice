package com.inher; // 이 코드가 속한 패키지 이름입니다.

/*
 * ★ 상속 (Inheritance)이란? ★
 * - 이미 만들어진 클래스(기존 클래스)의 속성(변수)과 기능(메서드)을 물려받아서
 * 새로운 클래스를 만드는 프로그래밍 기법입니다.
 * - 코드를 재사용하여 중복을 줄이고, 더 효율적으로 개발할 수 있게 도와줍니다.
 *
 * 상속받는 방법:
 * - 새로 만들 클래스 이름 뒤에 'extends'라는 키워드를 쓰고, 이어서 상속받을 클래스 이름을 적어주면 됩니다.
 * 예시: `public class 자식클래스 extends 부모클래스 { ... }`
 *
 * 상속 관계에서 두 클래스를 부르는 용어:
 * 1. 조상 클래스 (Ancestor Class):
 * - 다른 클래스에게 속성과 기능을 물려주는 클래스입니다.
 * - 다른 말로 '부모 클래스 (Parent Class)', '상위 클래스 (Super Class)', '기반 클래스 (Base Class)'라고도 부릅니다.
 *
 * 2. 자손 클래스 (Descendant Class):
 * - 조상 클래스로부터 속성과 기능을 물려받는 클래스입니다.
 * - 다른 말로 '자식 클래스 (Child Class)', '하위 클래스 (Sub Class)', '파생된 클래스 (Derived Class)'라고도 부릅니다.
 *
 * 정리: 자식 클래스는 부모 클래스의 모든 것을 물려받아 자신만의 것을 추가하거나, 물려받은 것을 자기 방식대로 바꿀 수 있습니다.
 */

import java.io.IOException;   // 파일 입출력 시 발생할 수 있는 예외(오류)를 처리하기 위해 필요한 클래스입니다.

import java.sql.SQLException; // 데이터베이스 작업 시 발생할 수 있는 예외(오류)를 처리하기 위해 필요한 클래스입니다.

public class Parent { // 'Parent'라는 이름의 클래스를 정의합니다. 이 클래스는 다른 클래스들의 부모가 될 수 있습니다.

	int age; // 'age'라는 이름의 정수형 변수(속성)입니다. 부모 클래스를 상속받는 자식 클래스에서도 이 'age' 변수를 사용할 수 있습니다.
	int x = 10; // 'x'라는 이름의 정수형 변수(속성)입니다. 초기 값으로 10을 가지고 있습니다.
				// 이 변수도 자식 클래스에 상속됩니다.

	// 'parentMethod'라는 이름의 메서드(기능)입니다.
	// 'void'는 이 메서드가 특별한 결과 값을 돌려주지 않는다는 의미입니다.
	// 'throws IOException, SQLException'은 이 메서드를 실행하다가 'IOException'이나 'SQLException'이라는
	// 특정한 종류의 문제가 발생할 수 있음을 미리 알려주는 것입니다.
	// 이 메서드를 호출하는 쪽에서는 이 오류들을 처리할 준비를 해야 합니다.
	void parentMethod() throws IOException, SQLException {
		// 현재 이 메서드 안에는 아무런 코드도 작성되어 있지 않지만,
		// 자식 클래스에서 이 메서드를 물려받아 자신만의 기능을 구현할 수 있습니다.
		// (이것을 '오버라이딩'이라고 합니다.)
	}

}
