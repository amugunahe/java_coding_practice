package com.inher; // 이 코드가 속한 패키지(폴더) 이름이다. (보통 상속(inheritance) 관련 예제에 쓰인다.)

/*
  DeckTest 클래스: **카드 덱(Deck)이랑 카드(Card) 클래스의 기능을 존나게 테스트하는 프로그램이다!**
 
  핵심:
  - **`Deck` 클래스:** 이 새끼는 52장의 카드(Card)를 다발(덱)로 가지고 있고, 카드 섞기(`shuffle()`)랑 카드 뽑기(`pick()`) 같은 기능을 한다고 가정한다!
  - **`Card` 클래스:** 카드 한 장 한 장의 정보를 담고 있다고 가정한다! (숫자, 모양 같은 거!)
  - **테스트 순서:**
  1. 덱을 존나게 새로 만든다. (이때 카드 52장이 자동으로 채워진다!)
  2. 덱에서 첫 번째 카드를 뽑아 본다.
  3. 덱에 있는 카드들을 존나게 섞는다!
  4. 다시 첫 번째 카드를 뽑아 본다. (섞였으니까 다른 카드가 나올 확률이 높다!)
 */

public class DeckTest {

	// ★★★ 프로그램 시작점 (메인 메소드) ★★★
	public static void main(String[] args) {
	
		// 1. 새로운 카드 덱(Deck)을 존나게 만든다.
		// 'new Deck()'을 하는 순간 52장의 카드가 모두 생성돼서 덱에 자동으로 들어간다고 가정한다! (존나 편함!)
		Deck d = new Deck();

		// 2. 덱에서 첫 번째 카드(인덱스 0)를 뽑는다.
		// 'd.pick(0)'은 덱의 맨 위(0번째) 카드를 가져오는 거다!
		Card c = d.pick(0);
		
		// 뽑은 카드 정보 출력. (Card 클래스의 'toString()' 메소드가 자동으로 호출돼서 카드 정보를 보여준다!)
		System.out.println(c);	

		d.shuffle(); // 3. 덱에 있는 52장의 카드를 ★무작위로 존나게 섞는다★. (셔플!)
		
		// 4. 카드 섞은 후, 다시 첫 번째 카드(인덱스 0)를 뽑는다.
		// 섞였으니까 이전 카드랑 다른 카드가 나올 확률이 존나게 높다!
		c = d.pick(0);
		
		// 새로 뽑은 카드 정보 출력.
		System.out.println(c);
	}

}
