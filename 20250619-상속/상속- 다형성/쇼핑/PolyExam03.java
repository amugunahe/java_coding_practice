package com.polyexam; // 이 코드가 속한 폴더(패키지) 이름이다.

/*
  PolyExam03 클래스: **물건 사고파는 과정을 좀 더 구체적으로 테스트하는 메인 프로그램!**
 
  핵심:
  - 'Tv', 'Computer', 'Audio' 객체를 **각각의 타입 변수에 저장한 후에** 구매한다.
  (이전 예제처럼 'new Tv()'를 바로 넘기는 대신 변수에 담아 넘기는 방식이다.)
  - 물건을 산 다음 'summary()'로 확인하고, **특정 물건을 환불한 다음 다시 'summary()'로 변경된 내역을 확인한다.**
  - **'buy()'와 'refund()' 메소드가 'Product' 타입으로 선언되어 있어서 모든 제품을 다룰 수 있는 게 존나 중요한 다형성이다!**
 */

public class PolyExam03 {

	public static void main(String[] args) { // ★★★ 여.기.서.부.터. 프로그램 시작! ★★★
	
		Buyer b = new Buyer(); // 'Buyer' 객체를 만들어서 물건 살 준비를 한다. (초기 돈 1000만원, 보너스 0점)
		
		// --- 각 제품 객체를 변수에 저장하기 ---
		// 각 제품을 바로 구매하는 대신, 먼저 각 타입에 맞는 변수에 객체를 저장한다.
		Tv tv = new Tv();           // Tv 객체를 만들어서 'tv' 변수에 저장.
		Computer com = new Computer(); // Computer 객체를 만들어서 'com' 변수에 저장.
		Audio au = new Audio();     // Audio 객체를 만들어서 'au' 변수에 저장.
		
		// --- 물건 사기 ---
		// 'b' (구매자)한테 'buy()' 메소드를 시켜서 물건을 산다.
		// ★★★ 'buy()' 메소드는 'Product' 타입 매개변수라서 'Tv', 'Computer', 'Audio' 객체 모두를 받을 수 있다! (다형성!) ★★★
		b.buy(tv);   // 'tv' 변수에 담긴 Tv 객체 사! (100만원)
		b.buy(com);  // 'com' 변수에 담긴 Computer 객체 사! (200만원)
		b.buy(au);   // 'au' 변수에 담긴 Audio 객체 사! (50만원)
		
		// --- 구매 내역 요약 ---
		// 'b' (구매자)한테 'summary()' 메소드를 시켜서 지금까지 뭘 샀는지, 돈은 얼마 썼는지 확인한다.
		b.summary(); // 총 350만원 어치 사고, 35점 쌓였을 거다.
		System.out.println(); // 출력물 보기 좋으라고 한 줄 띄우기.
		
		// --- 물건 환불 테스트 ---
		// 'b' (구매자)한테 'refund()' 메소드를 시켜서 'au' 변수에 담긴 Audio 객체를 반품한다.
		// ★★★ 'refund()' 메소드도 'Product' 타입 매개변수라서 'Audio' 객체를 그대로 넘길 수 있다! (다형성!) ★★★
		b.refund(au); // 오디오 반품해라! (50만원 돌려받고, 5점 깎임)
		
		// --- 환불 후 구매 내역 다시 요약 ---
		// 물건 반품했으니, 다시 'summary()' 메소드를 시켜서 바뀐 구매 내역을 확인한다.
		b.summary(); // 이제 총 300만원 어치 남았고, 30점 남아있을 거다.
	}
}