package com.polyexam; // 이 코드가 속한 폴더(패키지) 이름이다.

/*
  Product 클래스: **모든 '제품'들의 존나게 중요한 부모 설계도!**
 
  핵심:
  - 모든 제품이 공통으로 가질 속성인 **'가격(price)'과 '보너스 포인트(bonusPoint)'를 정의한다.**
  - 생성자를 통해 제품을 만들 때 **가격을 설정하고, 보너스 포인트는 그 가격의 10%로 자동 계산되게 한다.**
  - **이 클래스를 상속받는 모든 자식 제품들(Tv, Computer, Audio 등)은 이 속성들을 자동으로 물려받는다.**
  (이게 다형성을 가능하게 하는 존나 기본적인 틀이다!)
 */

public class Product { // 'Product'라는 이름의 설계도를 만드는 부분이다. 이걸로 모든 종류의 제품을 만들 거다.

	// 1. 필드 (속성)
	int price; // 제품의 가격.
	int bonusPoint; // 이 제품을 사면 얻는 보너스 점수.

	// 2. 생성자 (객체 만들 때 호출되는 특별한 놈!)

	// 기본 생성자: 'new Product()' 이렇게 인자 없이 호출할 때 쓴다.
	// 그냥 가격이랑 보너스 포인트를 0으로 초기화한다. (솔직히 잘 안 쓰지만, 기본값으로 만들어 둠)
	public Product() {
		price = 0;
		bonusPoint = 0;
		// 이 `;`는 그냥 비어있는 문장이라 없어도 된다.
	}

	// ★★★ 존나 중요! 가격을 받아서 제품을 만드는 생성자! ★★★
	// 'new Product(100)' 이런 식으로 가격을 지정해서 객체를 만들 때 호출된다.
	public Product(int price) {
		this.price = price; // 매개변수로 받은 'price' (입력 값)를 현재 Product 객체의 'price' 필드에 저장한다.
		// 보너스 포인트는 가격의 10%로 존나게 자동 계산해서 넣어준다!
		bonusPoint = (int) (price / 10.0); // (int)는 소수점을 버리고 정수로 만드는 거다.
	}

}