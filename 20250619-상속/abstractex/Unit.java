package com.abstractex; // 이 코드가 속한 폴더(패키지) 이름이다.

/*
  Unit 클래스: **모든 게임 유닛들의 존나 중요한 '추상' 부모 설계도!**
 
  핵심:
  - **'abstract' 키워드가 붙어서 이 클래스는 추상 클래스다!** (지 혼자서는 객체를 못 만든다, 씨발!)
  - 모든 유닛이 공통으로 가질 **좌표(`x`, `y`)**를 정의한다.
  - **`move()`라는 '추상 메소드'를 가지고 있다!**
  -> 이게 존나 중요하다! 이 새끼는 내용이 비어있고, **자식 클래스들이 무조건 지만의 방식으로 구현(오버라이딩)해야 한다!**
  -> (왜냐고? 마린이랑 탱크랑 드랍십은 움직이는 방식이 다를 거 아니냐, 씨발!)
  - **`stop()` 메소드는 구현은 되어 있는데 아무것도 안 한다.** (나중에 채울 수 있는 빈 껍데기!)
 */

public abstract class Unit { // 'Unit'이라는 추상 설계도다.

	int x, y; // 유닛의 x, y 좌표.

	// ★★★ 존나 중요! 'abstract' 메소드! ★★★
	// 내용이 없다. 그냥 선언만 돼 있다.
	// 이걸 상속받는 자식 클래스들은 **무조건 이 메소드를 지만의 방식으로 구현해야 한다!**
	abstract void move(int x, int y); // 유닛을 (x, y) 좌표로 이동시키는 추상 메소드.

	// 'stop()' 메소드: 유닛을 멈추는 행동을 정의한다.
	// 구현은 돼 있는데, **안에 아무 내용도 없다!** (그냥 빈 껍데기 함수다!)
	void stop() {} // 아무것도 안 한다!
	
}
