package com.objectex; // 이 코드는 'com.objectex' 패키지에 들어있음.

/*
  ★★★ 자바 변수 종류별 특징 ★★★
  ----------------------------------------------------------------------------------
  종류         | 선언 위치             | 생성 시기               | 특징 (존나 중요!)
  ----------------------------------------------------------------------------------
  클래스 변수  | 클래스 영역           | 클래스가 메모리에 로딩될 때 | 모든 객체가 ★공유★함 (static 붙음)
  인스턴스 변수 | 클래스 영역           | 인스턴스(객체) 생성될 때   | 객체마다 ★독립적★인 값 가짐
  지역 변수    | 메서드, 생성자, 초기화 블록 내부 | 변수 선언문 실행될 때   | 선언된 블록 안에서만 유효, 블록 끝나면 소멸
  ----------------------------------------------------------------------------------
 */

public class Variables { // 'Variables'라는 클래스.

	// ------------- 클래스 영역 변수들 (인스턴스/클래스 변수) ----------

	// 1. 인스턴스 변수 (Instance variable)
	// 'static' 안 붙어있고, 클래스 중괄호 안에 선언됨.
	// ★핵심: `Variables` 객체를 만들 때마다 ★각각 다른 `iv`가 생김★.
	// `Variables v1 = new Variables();` 만들면 `v1.iv` 생기고,
	// `Variables v2 = new Variables();` 만들면 `v2.iv` 생겨서 서로 다른 값 가질 수 있음.
	int iv;

	// 2. 클래스 변수 (Class variable)
	// 'static' 붙어있고, 클래스 중괄호 안에 선언됨. (다른 이름: static 변수, 공유 변수)
	// ★개중요★ 클래스가 메모리에 ★딱 한 번 로딩될 때★ 만들어짐.
	// `Variables` 객체를 몇 개를 만들든, 모든 객체가 이 `cv` 변수를 ★공유★함.
	// `v1.cv`랑 `v2.cv`는 결국 같은 곳을 가리킴.
	// 그래서 한 객체에서 `cv` 값 바꾸면, 다른 모든 객체에서도 바뀐 값을 보게 됨.
	static int cv; 

	// --------------------------------------------

	// 3. 지역 변수 (Local variable)
	// `method()`라는 메서드 블록 안에 선언됨.
	// ★주의★ 이 `iv`는 위의 인스턴스 변수 `iv`랑 이름만 같지, ★완전히 다른 변수★임.
	// `method()`가 호출돼서 `int iv = 0;` 이 코드가 실행될 때 만들어지고,
	// `method()` 실행 끝나면 자동으로 사라짐. `method()` 안에서만 쓸 수 있음.
	void method() {
		int iv = 0; // 지역 변수
	}
}
