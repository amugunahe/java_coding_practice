package com.objectex; // 이 코드가 속한 패키지(폴더) 이름이에요.

/* 변수 종류            선언위치            생성시기
------------------------------------------------------
    클래스 변수    | 클래스 영역    | 클래스가 만들어져서 메모리에 로딩될때
----------------- |--------------------------------------
    인스턴스 변수  | 클래스 영역    | 인스턴스(객체)가 생성될때
-----------------------------------------------------
    지역 변수   | 클래스 영역 이외의 영역          | 변수 선언문이 수행될 때
                | 메소드, 생성자, 초기화 블럭 내부 |
-----------------------------------------------------

 1. 인스턴스 변수 (Instance variable)
    클래스 영역에 선언되며, 클래스의 인스턴스를 생성할 때 만들어진다.
    인스턴스는 독립적인 저장공간을 가지므로 서로 다른 값을 가질 수 있다.

 2. 클래스 변수 (Class variable)
    인스턴스 변수 앞에 static을 붙이기만 하면 클래스 변수임
    - 모든 인스턴스가 공통된 저장 공간(변수)을 공유 하게 됨
      한 클래스의 모든 인스턴트들이 공통적인 값을 유지해야하는 속성의 경우 클래스 변수로 선언함


 3. 지역 변수 (Local variable)
    - 블럭을 지정한 범위 내에서 선언한 변수를 의미함
    (반복문, 메서드, 조거문)
    선언된 블록내에서만 사용가능하며, 블럭을 벗어나면 자동으로 소멸되어 사용할 수 없다.
*/

public class Variables { // Variables 라는 이름의 클래스를 정의합니다.

    // -------------클래스 영역에서 사용하는 변수----------

    // 1. 인스턴스 변수 (Instance variable)
    // 클래스 영역(클래스 중괄호 `{}` 안에 있지만, 어떤 메소드나 블록 안에는 있지 않은 곳)에 선언되었어요.
    // `static` 키워드가 붙어있지 않죠?
    // 이 `iv` 변수는 `Variables` 클래스의 '객체(인스턴스)'가 만들어질 때마다 각각 다른 `iv`가 생성돼요.
    // 예를 들어, `Variables v1 = new Variables();`와 `Variables v2 = new Variables();`를 만들면,
    // `v1.iv`와 `v2.iv`는 완전히 별개의 공간에 저장되어 서로 다른 값을 가질 수 있습니다.
    int iv;

    // 2. 클래스 변수 (Class variable)
    // 클래스 영역에 선언되었고, `static` 키워드가 붙어있어요.
    // `cv`는 '클래스가 메모리에 올라갈 때(로딩될 때)' 딱 한 번 생성돼요.
    // `Variables` 클래스의 어떤 객체(인스턴스)를 만들든, 모든 객체가 이 `cv` 변수를 **공유**합니다.
    // `v1.cv`와 `v2.cv`는 결국 같은 메모리 공간을 참조하게 돼요.
    // 그래서 한 객체에서 `cv` 값을 바꾸면, 다른 모든 객체에서도 바뀐 값을 보게 됩니다.
    static int cv; // 클래스 변수(static 변수, 공유 변수)

    // --------------------------------------------

    // 3. 지역 변수 (Local variable)
    // `method()`라는 메소드 블록 `{}` 안에 선언되었어요.
    // 이 `iv`는 위의 인스턴스 변수 `iv`와 이름은 같지만, 완전히 다른 변수예요.
    // `method()`가 호출되어 이 `int iv = 0;` 코드가 실행될 때 만들어지고,
    // `method()`의 실행이 끝나면 자동으로 사라집니다.
    // 이 `iv`는 `method()` 안에서만 사용할 수 있어요.
    void method() {
        int iv = 0; // 지역 변수
    }
}
