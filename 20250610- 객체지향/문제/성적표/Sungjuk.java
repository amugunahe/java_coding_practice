package com.sungex; // 'com.sungex'는 이 자바 파일(클래스)이 속한 패키지 이름이다.
                     // 'Record'와 'Sung' 클래스와 같은 패키지에 있어야 서로를 존나게 쉽게 찾아 사용할 수 있다.

/*
  Sungjuk 클래스: **학생별로 국어, 영어, 수학 점수를 입력받아**
  **총점, 평균, 석차를 계산하고 출력하는 프로그램의 '실행'을 담당하는 존나 중요한 클래스다!**
 
  핵심:
  - **목표:** 'Record' 클래스(데이터 저장)와 'Sung' 클래스(기능 처리)를 조합해서
  전체 성적 관리 프로그램을 존나게 실행시킨다.
  - **`main` 메소드:** 이 클래스 안에 `main` 메소드가 포함되어 있어, 자바 프로그램이 시작될 때 가장 먼저 실행된다!
  - **`Sung` 객체 활용:** `main` 메소드 안에서 `Sung` 클래스의 객체를 생성하고,
  그 객체가 가지고 있는 여러 기능 메소드들(`set()`, `input()`, `print()`)을 순서대로 호출하여
  전체 프로그램의 흐름을 존나게 제어한다!
 
  클래스 구성 (다시 한번 존나게 확인!):
  1. `Record` (설계도): 한 학생의 이름, 과목 점수, 총점, 평균, 석차 등 '데이터'만 저장하는 존나 단순한 클래스.
  2. `Sung` (설계도): 인원수 입력, 학생별 데이터 입력 및 점수(총점/평균) 계산, 석차 계산, 결과 출력 등 '기능'을 담당하는 존나 복잡한 클래스.
  3. `Sungjuk` (실행기): 이 두 클래스를 조합하여 프로그램을 '실행'시키는 존나 중요한 시작점 클래스!
 */

public class Sungjuk { // 'Sungjuk'이라는 이름의 공개(public) 클래스를 선언한다.
                     // 이 클래스는 전체 성적 관리 프로그램의 '시작점'이자 '실행기'다!

    // --- 메인 메소드(main method): 프로그램의 실제 시작점! ---
    // 자바 프로그램을 실행하면, 이 `main` 메소드 안의 코드부터 순서대로 실행된다.
	public static void main(String[] args) { // 'public static void'는 자바 프로그램의 시작 메소드임을 나타내는 표준 선언이다.
                                             // 'String[] args'는 프로그램 실행 시 외부에서 전달되는 인자(arguments)를 받을 때 사용하지만,
                                             // 이 프로그램에서는 사용하지 않는다.

		// 1. 'Sung' 클래스의 객체(인스턴스)를 생성한다.
		// 'Sung s = new Sung();'는 'Sung'이라는 설계도에 따라 실제 'Sung' 기능을 수행할 's'라는 객체를 메모리에 존나게 만든다.
		// 이제 's'라는 이름으로 'Sung' 클래스 안에 정의된 모든 메소드(set, input, print 등)를 사용할 수 있다.
		Sung s = new Sung(); // ★★★ 성적 관리 프로그램 객체 생성! ★★★

		// 2. 's' 객체의 `set()` 메소드를 호출한다.
		// 이 메소드는 사용자로부터 성적을 관리할 학생들의 총 인원수를 입력받는 역할을 한다.
		// 인원수에 따라 'Record' 객체 배열('s.re')의 크기가 결정된다.
		System.out.println("--- 성적 관리 프로그램 시작 ---");
		s.set(); // ★★★ 인원수 설정! ★★★

		// 3. 's' 객체의 `input()` 메소드를 호출한다.
		// 이 메소드는 `set()`에서 설정된 인원수만큼 각 학생의 이름과 과목별 점수를 입력받는다.
		// 입력받으면서 동시에 각 학생의 총점과 평균을 계산하여 's.re' 배열 안의 각 'Record' 객체에 저장한다.
		s.input(); // ★★★ 학생 점수 입력 및 총점/평균 계산! ★★★

		// 4. 's' 객체의 `print()` 메소드를 호출한다.
		// 이 메소드는 학생들의 석차를 계산하고 (print 메소드 안에서 ranking()을 호출),
		// 계산된 모든 성적 정보(이름, 과목 점수, 총점, 평균, 석차)를 화면에 존나게 깔끔하게 출력할 것이다.
		s.print(); // ★★★ 최종 성적 결과 출력! ★★★

        System.out.println("--- 성적 관리 프로그램 종료 ---");
        // 모든 메소드 호출이 완료되면, 'main' 메소드의 실행이 종료되고 프로그램이 끝난다.
	}

} // Sungjuk 클래스 종료
