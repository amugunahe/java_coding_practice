package com.functionex; // 'com.functionex'는 이 자바 파일(클래스)이 속한 패키지 이름이다.
                         // 패키지는 관련된 클래스들을 묶어서 관리하는 폴더 같은 역할을 한다.

/*
 * 이 'Circle' 클래스는 '원'이라는 기하학적 도형의 정보를 나타내는 **설계도**다.
 * 원의 중심 좌표(x, y)와 반지름(radius)을 저장하고,
 * 그 정보를 출력하는 **기능**을 가지고 있다.
 * 예를 들어, 그래픽 프로그램에서 화면에 원을 그릴 때 이 'Circle' 클래스의 **객체**를 만들어서 사용할 수 있다.
 */

public class Circle { // 'Circle'이라는 이름의 **공개(public) 클래스**를 선언한다.
                      // 이 클래스는 **'원' 객체를 만들기 위한 '설계도' 또는 '틀'**이다.

    // --- 멤버 변수 (필드) ---
    // 이들은 'Circle' 클래스로 만들어지는 각각의 **객체가 가질 고유한 정보들을 저장하는 공간**이다.
    // **'private' 접근 제어자**는 이 변수들이 'Circle' 클래스 내부에서만 **직접 접근 가능**하도록 하여 데이터를 **안전하게 보호**한다. (이걸 **캡슐화**라고 부른다!)
    private double x, y; // 원의 중심 좌표를 나타내는 변수다. 'double'은 소수점 이하의 숫자도 저장할 수 있는 타입이다. 'x'는 가로 좌표, 'y'는 세로 좌표를 의미한다.
    private int radius; // 원의 **'반지름'**을 저장할 정수(int) 변수다.

    // --- 생성자(Constructor) ---
    // 'Circle' 클래스의 **생성자**다.
    // 'Circle' **객체(인스턴스)**가 **처음 만들어질 때** (예: 'Circle c = new Circle(10.0, 20.0, 5);'와 같이) **자동으로 호출**되며,
    // 객체가 만들어질 때 원의 중심 좌표와 반지름을 **초기화하는 역할**을 한다.
    public Circle(double x, double y, int radius){ // 'Circle' 객체를 만들 때, 중심 좌표 'x', 'y' (double 타입)와 'radius' (int 타입)를 **매개변수**로 받는다.
        this.x = x;          // 전달받은 'x' 매개변수 값을 **현재 'Circle' 객체의 'x' 멤버 변수(필드)**에 할당한다. **'this.x'는 이 객체 자신의 'x' 변수를 의미한다.** (매개변수 x와 멤버변수 x 이름이 같을 때 **구분용**으로 쓴다!)
        this.y = y;          // 전달받은 'y' 매개변수 값을 현재 'Circle' 객체의 'y' 멤버 변수(필드)에 할당한다.
        this.radius =radius; // 전달받은 'radius' 매개변수 값을 현재 'Circle' 객체의 'radius' 멤버 변수(필드)에 할당한다.
    }

    // --- 원 정보 출력 메소드 ---
    // 이 메소드는 현재 'Circle' 객체가 가지고 있는 원의 중심 좌표와 반지름 정보를 **화면에 출력하는 기능**을 한다.
    public void show(){ // 이 메소드는 어떤 값도 **반환하지 않고(void)**, 단순히 정보를 출력하는 **역할만** 한다. 'show'는 "보여주다"라는 의미로, 객체의 상태를 출력할 때 자주 사용되는 메소드 이름이다.
        // System.out.println()을 사용하여 원의 정보를 출력한다.
        // 출력 결과는 "(x좌표, y좌표)반지름" 형태가 된다. (예: (10.0, 20.0)5)
        System.out.println("(" + x + ", " + y + ")" + radius) ; // x와 y 사이에 ", "를 추가해서 보기 좋게 출력한다.
    }

    // --- 추가: 원의 넓이를 계산하는 메소드 (맛보기) ---
    // 이런 식으로 객체와 관련된 **추가 기능**을 메소드로 구현할 수 있다.
    public double calculateArea() { // 이 메소드는 원의 넓이를 계산하여 **double 타입으로 반환**한다.
        return Math.PI * radius * radius; // **'Math.PI'는 자바에서 제공하는 원주율(파이) 상수**다. 반지름 * 반지름 * 파이 공식을 사용한다.
    }
} // Circle 클래스 종료
