package com.functionex; // 'com.functionex'는 이 자바 파일(클래스)이 속한 패키지 이름이다.
                         // 패키지는 관련된 클래스들을 묶어서 관리하는 폴더 같은 역할을 한다.

import java.util.*; // 'java.util' 패키지 안에 있는 모든 유틸리티 클래스들을 가져와 사용하겠다는 의미다.
                     // 여기서는 사용자로부터 입력을 받기 위한 'Scanner' 클래스를 사용하기 위해 존나게 필요하다.

/*
  Grade 클래스: **학생의 국어, 영어, 수학 점수를 저장하고 평균을 존나게 계산하는 기능을 제공한다!**
 
  핵심:
  - **목표:** 학생 한 명의 세 과목 점수를 관리하고, 그 점수들의 평균을 계산한다.
  - **멤버 변수:** `kor`, `eng`, `mat` 세 과목 점수를 저장하는 공간이다.
  - **생성자:** `Grade` 객체를 만들 때(`new Grade(...)`) 점수들을 바로 초기화할 수 있게 해준다.
  - **`average()` 메소드:** 세 과목의 평균 점수를 계산해서 돌려준다!
  (근데 씨발, 정수 연산이라 소수점 이하는 버려진다! 나중에 `double`로 바꿔서 존나 정확하게 만들 수도 있다!)
  - **`main` 메소드:** 사용자한테 점수를 입력받아서 `Grade` 객체를 만들고 평균을 출력하는 예시를 보여준다!
 */

public class Grade { // 'Grade'라는 이름의 공개(public) 클래스를 선언한다.
                     // 클래스는 객체를 만들기 위한 '설계도'와 같다. 이 설계도로 학생 정보를 가진 객체를 존나게 만들어내는 거다!

    // --- 멤버 변수 (인스턴스 변수) ---
    // 이들은 'Grade' 클래스로 만들어지는 각각의 객체가 가질 점수들을 저장하는 공간이다.
    // 학생마다 자기만의 국어, 영어, 수학 점수를 가질 수 있게 해준다!
	int kor; // 국어 점수를 저장할 정수형 변수.
	int eng; // 영어 점수를 저장할 정수형 변수.
	int mat; // 수학 점수를 저장할 정수형 변수.

    // --- 생성자(Constructor): 객체 만들 때 초기화하는 존나 특별한 메소드! ---
    // 'Grade' 객체가 생성될 때 호출되어 멤버 변수들을 초기화하는 특별한 메소드다.
	public Grade(int kor, int eng, int mat) { // 'kor', 'eng', 'mat' 세 개의 정수형 매개변수를 받는다.
		this.kor = kor; // 매개변수로 받은 'kor' 값을 현재 객체의 'kor' 멤버 변수에 저장한다. ('this.'는 현재 객체를 의미한다! 존나 중요!)
		this.eng = eng; // 매개변수로 받은 'eng' 값을 현재 객체의 'eng' 멤버 변수에 저장한다.
		this.mat = mat; // 매개변수로 받은 'mat' 값을 현재 객체의 'mat' 멤버 변수에 저장한다.
	}

    // --- 평균 계산 메소드 ---
    // 세 과목의 점수를 이용하여 평균을 계산하고 그 결과를 정수형으로 반환한다.
    int average() { // 'average'라는 이름의 메소드를 선언한다. 매개변수는 없다.
        // ★★★ 존나 중요! 정수 연산이라 소수점 이하는 버려진다! ★★★
        // 예: (90 + 80 + 70) / 3 = 240 / 3 = 80 (정확)
        // 예: (90 + 80 + 75) / 3 = 245 / 3 = 81 (실제론 81.666... 이지만 정수만 나온다!)
	    return (kor + eng + mat) / 3; 
    }

    // --- 메인 메소드(main method): 프로그램의 시작점 ---
    // 자바 프로그램을 실행하면 이 'main' 메소드부터 코드가 실행되기 시작한다.
    public static void main(String[] args) { // 'main' 메소드는 항상 'public static void'로 선언된다.

		// ★★★ Scanner 객체를 생성하여 사용자로부터 키보드 입력을 받을 준비를 한다! ★★★
		Scanner sc = new Scanner(System.in);
	    
		// 사용자에게 점수 입력을 안내하는 메시지를 화면에 출력한다.
		System.out.print("국어, 영어, 수학 순으로 3개의 점수 입력: ");

	 	// 사용자로부터 국어 점수를 정수형으로 입력받아 'kor' 지역 변수에 저장한다.
	 	int kor = sc.nextInt();
	    
	 	// 사용자로부터 영어 점수를 정수형으로 입력받아 'eng' 지역 변수에 저장한다.
	 	int eng = sc.nextInt();
	    
	 	// 사용자로부터 수학 점수를 정수형으로 입력받아 'mat' 지역 변수에 저장한다.
	 	int mat = sc.nextInt();

	    // ★★★ 'Grade' 클래스의 새로운 객체 'me'를 존나게 생성한다! ★★★
	    // 이때 위에서 입력받은 'kor', 'eng', 'mat' 점수들을 생성자에 전달하여 객체를 초기화한다.
	    // 즉, 'me' 객체는 입력된 점수들을 자신의 멤버 변수에 가지게 된다.
	    Grade me = new Grade(kor, eng, mat);

	    // ★★★ 'me' 객체의 'average()' 메소드를 호출하여 평균 점수를 계산하고, 그 결과를 출력한다! ★★★
	 	System.out.println("평균은 " + me.average());

	    // ★★★ Scanner 객체를 닫아 자원을 해제한다! (필수는 아니지만 존나 좋은 습관이다!) ★★★
	    sc.close();
	    
    } // main 메소드 종료
	
} // Grade 클래스 종료
