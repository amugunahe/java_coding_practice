package com.functionex; // 'com.functionex'는 이 자바 파일(클래스)이 속한 패키지 이름입니다.
                        // 이전에 설명드렸던 'DicApp' 클래스와 같은 패키지에 있어야 서로를 쉽게 찾아 사용할 수 있습니다.

/*
  이 'Dictionary' 클래스는 간단한 한영 사전의 역할을 합니다.
  미리 정의된 한글 단어 배열과 그에 해당하는 영어 단어 배열을 가지고 있으며,
  한글 단어를 입력받아 해당하는 영어 단어를 찾아주는 'kor2Eng()' 메소드를 제공합니다.
  'DicApp' 클래스와 함께 사용될 때, 사용자에게 한영 단어 검색 기능을 제공하게 됩니다.
 */

public class Dictionary { // 'Dictionary'라는 이름의 공개(public) 클래스를 선언합니다.
                          // 이 클래스는 '사전'이라는 개념을 코드로 구현한 '설계도'입니다.

    // --- 멤버 변수 (필드) ---
    // 이들은 'Dictionary' 클래스에 속한 '데이터'입니다.
    // 'private static' 키워드에 주목해주세요.
    // 'private': 이 변수들은 'Dictionary' 클래스 내부에서만 직접 접근할 수 있습니다.
    // 'static': 이 변수들은 'Dictionary' 클래스가 로드될 때 단 한 번만 생성되며, 모든 'Dictionary' 객체가 이 변수들을 공유합니다.
    //           즉, 'Dictionary' 객체를 여러 개 만들어도 'kor'과 'eng' 배열은 하나만 존재합니다.
    private static String[] kor = { "사랑", "아기", "돈", "미래", "희망" }; // 한글 단어들을 저장하는 문자열 배열입니다.
                                                                        // 미리 정해진 단어들로 초기화되어 있습니다. (우리 사전의 한글 부분)
    private static String[] eng = { "love", "baby", "money", "future", "hope" }; // 위 'kor' 배열의 단어와 순서가 일치하는
                                                                                 // 영어 단어들을 저장하는 문자열 배열입니다. (우리 사전의 영어 부분)

    // --- 한글 단어를 영어 단어로 변환하는 메소드 ---
    // 이 메소드는 한글 단어를 입력받아 'kor' 배열에서 해당 단어를 찾고,
    // 같은 인덱스에 있는 'eng' 배열의 영어 단어를 반환합니다.
	public static String kor2Eng(String word) { // 'public static': 어디서든 접근 가능하고 객체 생성 없이 'Dictionary.kor2Eng()'처럼 바로 호출할 수 있습니다.
                                               // 'String': 이 메소드가 문자열(영어 단어)을 반환한다는 의미입니다.
                                               // 'String word': 검색할 한글 단어를 매개변수로 받습니다.

		// --- 검색 코드 ---
        // 'for' 반복문을 사용하여 'kor' 배열의 모든 요소를 처음부터 끝까지 순회합니다.
		for(int i = 0; i < kor.length; i++) { // 'int i = 0;': 반복문의 시작 인덱스를 0으로 초기화합니다.
                                              // 'i < kor.length;': 'i'가 'kor' 배열의 길이보다 작은 동안 (즉, 배열의 모든 요소에 대해) 반복합니다.
                                              // 'i++': 반복할 때마다 'i' 값을 1씩 증가시킵니다.
            // 'kor[i].equals(word)'는 'kor' 배열의 현재 'i'번째 한글 단어가
            // 매개변수로 받은 'word'와 정확히 일치하는지 비교합니다. (문자열 비교는 '==' 대신 '.equals()'를 사용합니다.)
			if(kor[i].equals(word)) { // 만약 일치하는 한글 단어를 찾았다면
				return eng[i]; // 'kor' 배열에서 찾은 단어와 동일한 인덱스에 있는 'eng' 배열의 영어 단어를 반환합니다.
                               // (예: 'kor[0]'이 "사랑"이면 'eng[0]'은 "love"이므로, "사랑"을 입력하면 "love"를 반환)
			}
		}
		// --- 검색 실패 시 ---
        // 반복문이 끝날 때까지 일치하는 단어를 찾지 못했다면,
        // (즉, 우리 사전에 없는 단어인 경우)
		return null; // 'null'을 반환합니다. 'null'은 '아무것도 없음'을 의미하는 특별한 값입니다.
                     // 'DicApp'에서는 이 'null' 값을 확인하여 "사전에 없습니다" 메시지를 출력하게 됩니다.
	}
} // Dictionary 클래스 종료
